<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Cube_man</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///skabelses beretningen!
grav = 0.12
hsp = 0;
vsp = 0;
jumpspeed = 5;
movespeed = 3;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Spiller input
key_right = keyboard_check(ord("D"));
key_left = -keyboard_check(ord("A"));
key_jump = keyboard_check_pressed(vk_space);

//bev√¶gelse
move = key_left + key_right;
hsp = move * movespeed;
if (vsp &lt; 10) vsp += grav;

if(move = -1) image_xscale = -1;
else if (move = 1) image_xscale = 1;

if (place_meeting(x,y+1,oCollision))
{
    vsp = key_jump * -jumpspeed
}


//Colission Horizontal
if (place_meeting(x+hsp,y,oCollision))
{
    while(!place_meeting(x+sign(hsp),y,oCollision))
    {
        x += sign(hsp);
    }
    hsp = 0;
}
/*if (place_meeting(x+hsp,y,oBold))
{
    while(!place_meeting(x+sign(hsp),y,oBold))
    {
        x += sign(hsp);
    }
    hsp = 0;
}
*/
x += hsp;
//Colission Vertical
if (place_meeting(x,y+vsp,oCollision))
{
    while(!place_meeting(x,y+sign(vsp),oCollision))
    {
        y += sign(vsp);
    }
    vsp = 0;
}
y += vsp;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>key_shoot = mouse_check_button_pressed(mb_left);
if (key_shoot = 1)
{
    if(image_xscale = 1) bullet = instance_create(x + 13,y + 9,oCube_bulllet);
    else bullet = instance_create(x - 13,y + 9,oCube_bulllet);
    if (mouse_x != x)
    {
        a = mouse_y - y; b = mouse_x - x; c = sqrt(sqr(a) + sqr(b));
        cosa = (sqr(b) + sqr(c) - sqr(a))/(2 * b * c);
        if(mouse_y &gt; y) vinkela = -radtodeg(arccos(cosa));
        else vinkela = radtodeg(arccos(cosa));
           
    }
    else vinkela = 0;
    bullet.direction = vinkela;
    bullet.image_angle = mouse_y;
    bullet.speed = 14;
//    bullet.hsp = 7;
//    bullet.vsp = 7;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
